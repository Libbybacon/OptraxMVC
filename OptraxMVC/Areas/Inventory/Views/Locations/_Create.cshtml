@using OptraxDAL.Models.Inventory
@using OptraxMVC.Models


    @model InventoryLocation

@{
    FormVM formVM = ViewBag.FormVM;
    var locations = Model.LocationType == "Room" ? (IEnumerable<SelectListItem>)(ViewData["Buildings"] ?? new()) : new List<SelectListItem>();
}

<div class="px-2">

    @using (Html.BeginForm(formVM.Action, "Locations", FormMethod.Post, new { id = "modelForm", data_func = formVM.JsFunc, data_msgdiv = formVM.MsgDiv }))
    {
        @Html.AntiForgeryToken()

        <input type="hidden" id="LocationType" name="LocationType" value="@Model.LocationType" />
        <div class="d-flex justify-content-center">
            <div class="row col-12 d-flex w-100">
                <div class="col-6">
                    @Html.LabelFor(model => model.Name)
                    @Html.EditorFor(m => m.Name, "Name", new { htmlAttributes = new { @class = $"form-control attr" } })
                    @Html.ValidationMessageFor(m => m.Name, "", new { @class = "val-msg" })
                </div>
                <div class="col-6">
                    @Html.LabelFor(m => m.Description)
                    @Html.EditorFor(m => m.Description, "Description", new { htmlAttributes = new { @class = $"form-control attr" } })
                    @Html.ValidationMessageFor(m => m.Description, "", new { htmlAttributes = new { @class = "val-msg" } })
                </div>
                @if (Model.LocationType == "Room")
                {
                    <div class="col-xl-4 col-6">
                        @Html.LabelFor(m => m.ParentID)
                        @Html.DropDownListFor(m => m.ParentID, locations, "Select Parent Location", new { @class = $"form-control select2 attr" })
                        @Html.ValidationMessageFor(m => m.ParentID, "", new { @class = "val-msg" })
                    </div>
                }
            </div>
        </div>
        @if (Model.LocationType == "Building")
        {
            @await Html.PartialAsync("_BuildingLocation", Model, new ViewDataDictionary(ViewData))
        }
        <div class="popup-btns d-flex justify-content-center">
            <button type="submit" class="save-btn form-btn @(formVM.IsNew ? "" : "d-none")">Save New Location</button>
            <button type="submit" class="update-btn form-btn d-none">Save Changes</button>
        </div>
    }
</div>

<script src="/js/forms.js"></script>
