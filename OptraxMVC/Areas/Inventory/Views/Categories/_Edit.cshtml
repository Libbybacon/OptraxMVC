@using OptraxDAL.Models.Inventory
@model InventoryCategory

@using (Html.BeginForm("Create", "Categories", FormMethod.Post, new { id = "modelForm", data_func = "saveCategory", data_msgdiv = "tableMsg", data_model = "cat" }))
{
    @Html.AntiForgeryToken()

    <div class="d-flex justify-content-center">
        <div class="row col-12 d-flex w-100">
            <div class="col-4">
                @Html.LabelFor(m => m.Name)
                @Html.EditorFor(m => m.Name, "Name", new { htmlAttributes = new { @class = "form-control cat-name-edit" } })
                @Html.ValidationMessageFor(m => m.Name, "", new { @class = "val-msg" })
            </div>
            <div class="col-4">
                <div class="h-50"></div>
                <div class="d-flex justify-content-center">
                    <label class="mt-3">
                        Top Level Category?
                        <input type="checkbox" id="top-cat-check" class="form-check-input f-lg ms-2" />
                    </label>
                </div>
            </div>
            <div class="col-4">
                @Html.LabelFor(m => m.ParentID)
                @Html.DropDownListFor(m => m.ParentID, new SelectList(ViewBag.Categories, "ID", "Name"), "Parent Category", new { @class = "form-control form-select select2" })
                @Html.ValidationMessageFor(m => m.ParentID, "", new { @class = "val-msg" })
            </div>
            <div class="col-4">
                @Html.LabelFor(m => m.HexColor)
                @Html.EditorFor(m => m.HexColor, "HexColor", new { htmlAttributes = new { @class = "form-control hex-pick", data_coloris = "" } })
                @Html.ValidationMessageFor(m => m.HexColor, "", new { htmlAttributes = new { @class = "val-msg" } })
            </div>
            <div class="col-4">
                @Html.LabelFor(m => m.TextColor)
                @Html.EditorFor(m => m.TextColor, "TextColor", new { htmlAttributes = new { @class = "form-control hex-pick-bw", data_coloris = "" } })
                @Html.ValidationMessageFor(m => m.TextColor, "", new { htmlAttributes = new { @class = "val-msg" } })
            </div>
            <div class="hex-prev-div col-4">
                <label>Color Preview</label>
                <input type="text" class="hex-prev form-control" readonly>
            </div>
        </div>
    </div>
    <div class="row d-flex w-100">
        <div class="mx-auto form-note">**Note: New categories will not be visible in table until items have been assigned.</div>
    </div>
    <div class="popup-btns d-flex"><button type="submit" class="save-btn form-btn mx-auto mt">Save</button></div>
}

<script src="/js/forms.js"></script>