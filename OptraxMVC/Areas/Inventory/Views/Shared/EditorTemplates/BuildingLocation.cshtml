@using OptraxDAL.Models.Inventory
@using OptraxMVC.Models

@model BuildingLocation

@{
    var states = (IEnumerable<SelectListItem>)(ViewData["States"] ?? new List<SelectListItem>());
}

<div id="Address" class="address-div">
    <div class="d-flex justify-content-center">
        <div class="row col-12 d-flex w-100">
            <div class="col-xl-4 col-6">
                @Html.LabelFor(m => m.Address.Address1)
                @Html.EditorFor(m => m.Address.Address1, "", new { htmlAttributes = new { @class = $"form-control" } })
                @Html.ValidationMessageFor(m => m.Address.Address1, "", new { htmlAttributes = new { @class = "val-msg" } })
            </div>
            <div class="col-xl-4 col-6">
                @Html.LabelFor(m => m.Address.Address2)
                @Html.EditorFor(m => m.Address.Address2, "", new { htmlAttributes = new { @class = $"form-control" } })
                @Html.ValidationMessageFor(m => m.Address.Address2, "", new { htmlAttributes = new { @class = "val-msg" } })
            </div>
            <div class="col-xl-4 col-6">
                @Html.LabelFor(m => m.Address.City)
                @Html.EditorFor(m => m.Address.City, "", new { htmlAttributes = new { @class = $"form-control" } })
                @Html.ValidationMessageFor(m => m.Address.City, "", new { htmlAttributes = new { @class = "val-msg" } })
            </div>
            <div class="col-xl-4 col-6">
                @Html.LabelFor(m => m.Address.State)
                @Html.DropDownListFor(m => m.Address.State, states, "Select State", new { @class = $"form-control select2 attr" })
                @Html.ValidationMessageFor(m => m.Address.State, "", new { htmlAttributes = new { @class = "val-msg" } })
            </div>
            <div class="col-xl-4 col-6">
                @Html.LabelFor(m => m.Address.ZipCode)
                @Html.EditorFor(m => m.Address.ZipCode, "", new { htmlAttributes = new { @class = $"form-control" } })
                @Html.ValidationMessageFor(m => m.Address.ZipCode, "", new { htmlAttributes = new { @class = "val-msg" } })
            </div>
            <div class="col-xl-4 col-6">
                @Html.LabelFor(m => m.Address.ContactName)
                @Html.EditorFor(m => m.Address.ContactName, "", new { htmlAttributes = new { @class = $"form-control" } })
                @Html.ValidationMessageFor(m => m.Address.ContactName, "", new { htmlAttributes = new { @class = "val-msg" } })
            </div>
            <div class="col-xl-4 col-6">
                @Html.LabelFor(m => m.Address.ContactPhone)
                @Html.EditorFor(m => m.Address.ContactPhone, "", new { htmlAttributes = new { @class = $"form-control", @pattern = $"\\(\\d{3}\\)\\d{3}-\\d{4}", @placeholder = "(xxx)xxx-xxxx" } })
                @Html.ValidationMessageFor(m => m.Address.ContactPhone, "", new { htmlAttributes = new { @class = "val-msg" } })
            </div>
            <div class="col-xl-4 col-6">
                @Html.LabelFor(m => m.Address.ContactEmail)
                @Html.EditorFor(m => m.Address.ContactEmail, "", new { htmlAttributes = new { @class = $"form-control" } })
                @Html.ValidationMessageFor(m => m.Address.ContactEmail, "", new { htmlAttributes = new { @class = "val-msg" } })
            </div>
        </div>
    </div>
</div>
