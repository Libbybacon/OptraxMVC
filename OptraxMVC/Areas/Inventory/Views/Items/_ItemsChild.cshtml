@using OptraxDAL.Models.Inventory
@using OptraxDAL.Models
@model InventoryCategory

@{
    int catID = Model.ID;
    int level = ViewData["Level"] as int? ?? 0;
    bool topRow = Model.Parent == null;
    var indent = $"padding-left: {level * 20}px;"; // nested indentation

    List<InventoryItem> items = ViewData["Items"] as List<InventoryItem> ?? [];
    Console.WriteLine("items", items);
    List<InventoryItem> catItems = items.Where(i => i.CategoryID == Model.ID).ToList();
    if (catItems.Count == 0)
    {
        InventoryItem newItem = new InventoryItem(Model) { };

        catItems.Add(newItem);
    }

    //items.RemoveAll(i => catItems.Contains(i)); // pare down the list as we go

    var uoms = Enum.GetValues(typeof(Enums.InventoryUOM));
    var stockTypes = Enum.GetValues(typeof(Enums.StockType));

    //show cat items
    //show cat children
    //show both
}

<tr id="cat-@catID" data-name="@Model.Name" class="@(topRow ? "top-row" : "cat-row")">
    <td style="@indent">
        <div class="d-flex align-items-center">
            @if (topRow)
            {
                <button id="cats-@catID-btn" class="toggle-btn btn-clear" data-toggle-id="child-@catID">
                    <span class="show-i"><i class="bi bi-chevron-double-down"></i></span>
                    <span class="hide-i d-none"><i class="bi bi-chevron-double-up"></i></span>
                </button>
            }
            <button id="items-@catID-btn" class="toggle-btn toggle" data-toggle-id="items-@catID">
                <span class="show-i"><i class="bi bi-chevron-compact-down"></i></span>
                <span class="hide-i d-none"><i class="bi bi-chevron-compact-up"></i></span>
            </button>
            <div class="cat-name">@Model.Name</div>
        </div>
    </td>
    <td colspan="2">@Model.Description</td>
    <td>
        <div class="d-flex justify-content-end pe-2 py-1">
            <button class="add-cat toggle me-2 text-success" data-id="@catID" data-parent-id="@(Model.ParentID ?? 0)">+</button>
        </div>
    </td>
</tr>

<tr id="items-@catID" class="items-row w-100" style="display: none">
    <td colspan="4" style="@indent">
        <table id="items-table-@catID" class="table cat-table items-table f-sm">
            <thead class="items-head p-0">
                <tr class="f-xs">
                    <th class="btn-cell">
                        <input type="hidden" class="cat-string" value="@Model.GetCategoryNamesString()" />
                        <div class="d-flex align-items-center">
                            <button class="add-item btn-clear f-xs ms-auto me-4" data-catid="@catID"><span class="add-new-item f-md text-grn-dk pe-2">+</span>New Item</button>
                        </div>
                    </th>
                    <th>Item Name</th>
                    <th>Description</th>
                    <th>Manufacturer</th>
                    <th>SKU</th>
                    <th>Default UOM</th>
                    <th>Stock Type</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in catItems.OrderBy(i => i.Name).ToList())
                {
                    int id = item.ID;
                    bool isNew = id == 0;
                    string newRow = isNew ? "new-row" : "";
                    string trID = isNew ? $"item-new-{Model.ID}" : $"item-{id}";

                    <tr id="@trID" class="item-row @newRow f-xs" data-itemid="@id" data-classtype="item">
                        <td class="btn-cell vtd"></td>
                        <td class="Name vtd">
                            <div class="attr-txt">@item.Name</div>
                            <input type="text" class="attr-edit form-control" data-val="@item.Name" name="Name" value="@item.Name" required />
                        </td>
                        <td class="Description vtd">
                            <div class="attr-txt">@item.Description</div>
                            <textarea class="attr-edit form-control" rows="1" data-val="@item.Description" name="Description" required>@item.Description</textarea>
                        </td>
                        <td class="Manufacturer vtd">
                            <div class="attr-txt">@item.Manufacturer</div>
                            <input type="text" class="attr-edit form-control" name="Manufacturer" data-val="@item.Manufacturer" value="@item.Manufacturer" />
                        </td>
                        <td class="SKU vtd">
                            <div class="attr-txt">@item.SKU</div>
                            <input type="text" class="attr-edit form-control" name="SKU" data-val="@item.SKU" value="@item.SKU" />
                        </td>
                        <td class="DefaultUOM vtd">
                            <div class="attr-txt">@item.DefaultUOM</div>
                            <select class="attr-edit form-select" name="DefaultUOM" data-val="@item.DefaultUOM">
                                @foreach (var uom in uoms)
                                {
                                    <option value="@uom" @(uom.ToString() == item.DefaultUOM ? "selected" : "")>@uom</option>
                                }
                            </select>
                        </td>
                        <td class="StockType vtd">
                            <div class="attr-txt py-1 px-2">@(isNew ? "" : item.StockType?.Substring(0, 1))</div>
                            <select class="attr-edit form-select d-none" name="StockType" data-val="@item.StockType" required>
                                <option value="">Select Default UOM</option>
                                @foreach (var type in stockTypes)
                                {
                                    <option value="@type" @(type.ToString() == item.StockType ? "selected" : "")>@type</option>
                                }
                            </select>
                        </td>
                        <td colspan="7" data-trid="@trID" class="edit-td py-3 d-none">
                            <form class="item-form">
                                <div id="" class="pop-div row d-flex col-12">
                                    <div class="popout col-12">
                                        <div class="pop-row row d-flex pb-2 col-12"></div>
                                        <div class="save-row row d-flex py-2 w-100 d-none">
                                            <input type="hidden" name="CategoryID" value="@catID" />
                                            <button type="submit" class="save-item save-btn m-auto">Save New Item</button>
                                        </div>
                                    </div>
                                </div>
                            </form>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </td>
</tr>

@if (Model.Children.Any())
{
    <tr id="child-@Model.ID" class="child-row">
        <td colspan="4">
            <table class="table cat-table">
                @foreach (var child in Model.Children.OrderBy(c => c.Name).ToList())
                {
                    var childVD = new ViewDataDictionary(ViewData) { ["Level"] = level + 1, ["Items"] = items };

                    @await Html.PartialAsync("~/Areas/Inventory/Views/Items/_ItemsChild.cshtml", child, childVD)
                }
            </table>
        </td>
    </tr>
}

