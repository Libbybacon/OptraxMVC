@using OptraxDAL.Models.Inventory
@model InventoryCategory

@{
    int level = ViewData["Level"] as int? ?? 0;
    var indent = $"padding-left: {level * 20}px;";
    var rowClass = Model.Parent == null ? "top-row" : "cat-row";

    List<InventoryItem> items = ViewData["Items"] as List<InventoryItem> ?? [];
    List<InventoryItem> catItems = items.Where(i => i.CategoryID == Model.ID).ToList();

    items.RemoveAll(i => catItems.Contains(i));
}

<input type="hidden" id="itemsID" value="items-@level-@Model.ID" />
<input type="hidden" id="childID" value="child-@Model.ID" />

<tr id="cat-@Model.ID" class="@rowClass">
    <td style="@indent">
        <div class="d-flex align-items-center">

            <button id="items-@Model.ID-btn" class="toggle-btn toggle" data-toggle-id="items-@Model.ID">
                <span class="show-i"><i class="bi bi-chevron-compact-down"></i></span>
                <span class="hide-i d-none"><i class="bi bi-chevron-compact-up"></i></span>
            </button>
            <div class="cat-name">@Model.Name</div>
        </div>
    </td>
    <td colspan="2">@Model.Description</td>
    <td>
        <div class="d-flex justify-content-end pe-2">
            <button class="add-cat toggle me-2 text-success" data-id="@Model.ID" data-parent-id="@(Model.ParentID ?? 0)">+</button>
            @* <button class="remove-cat toggle btn-clear text-danger" data-id="@Model.ID">X</button> *@
        </div>
    </td>
</tr>


<tr class="items-row child-row w-100" style="display: none">
    <td colspan="4" style="@indent">
        <table id="items-@level-@Model.ID" class="table cat-table items-table smF">
            <thead class="items-head p-0">
                <tr class="xsF">
                    <th class="btn-cell">
                        <div class="d-flex align-items-center">
                            <button class="add-item btn-clear xsF ms-auto me-4" data-id="@Model.ID"><span class="add-new-item mdF text-grn-dk pe-2">+</span>New Item</button>
                        </div>
                    </th>

                    <th>Item Name</th>
                    @* <th>Description</th> *@
                    <th>Manufacturer</th>
                    <th>SKU</th>
                    <th>Default UOM</th>
                    <th>Stock Type</th>
                    @* <th></th> *@
                </tr>
            </thead>
            <tbody>
                @if (catItems.Count > 0)
                {
                    @foreach (var item in catItems.OrderBy(i => i.Name).ToList())
                    {
                        <tr class="smF" data-itemid="@item.ID" data-classtype="item">
                            <td class="btn-cell"></td>

                            <td class="attr" data-val="@item.Name" data-field="Name">
                                <div class="py-1 px-2">@item.Name</div>
                            </td>
                            @*                             <td class="attr" data-val="@item.Description" data-field="Description">
                                <div class="py-1 px-2">@item.Description</div>
                            </td> *@
                            <td class="attr" data-val="@item.Manufacturer" data-field="Manufacturer">
                                <div class="py-1 px-2">@item.Manufacturer</div>
                            </td>
                            <td>
                                <div class="py-1 px-2">@item.SKU</div>
                            </td>
                            <td class="attr" data-val="@item.DefaultUOM" data-field="DefaultUOM">
                                <div class="py-1 px-2">@item.DefaultUOM</div>
                            </td>
                            <td class="attr" data-val="@item.StockType" data-field="StockType">
                                <div class="py-1 px-2">@item.StockType</div>
                            </td>
                            @*                             <td>
                                <button class="edit-item btn-clear" data-id="@item.ID">Edit</button>
                                <button class="remove-item otx-btn btn-clear text-danger" data-id="@item.ID">Remove</button>
                            </td> *@
                        </tr>
                    }
                }
            </tbody>
        </table>
    </td>
</tr>

@if (Model.Children.Any())
{
    <tr class="child-row">
        <td colspan="4">
            <table id="child-@Model.ID" class="table cat-table">
                @foreach (var child in Model.Children.OrderBy(c => c.Name).ToList())
                {
                    var childVD = new ViewDataDictionary(ViewData) { ["Level"] = level + 1, ["Items"] = items };

                    @await Html.PartialAsync("~/Areas/Inventory/Views/Items/_ItemsChild.cshtml", child, childVD)
                }
            </table>
        </td>
    </tr>
}


    <script type="text/javascript">
        $(document).ready(function(){
            var itemsID = $('#itemsID').val();
            console.log('itemsID', itemsID)
            
            // $(`#${itemsID}`).dataTable({

            // });
        })
    </script>
