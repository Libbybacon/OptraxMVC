@using OptraxDAL.Models.Inventory
@model InventoryItem

<form id="item-form">
    <div class="d-flex justify-content-center">
        <div class="row col-12 d-flex w-100">
            <div class="col-md-4 col-6">
                <label>Name</label>
                <input type="text" class="form-control" data-val="@Model.Name" name="Name" value="@Model.Name" required />
                @*@Html.EditorFor(m => m.Name, "Name", new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(m => m.Name, "", new { @class = "val-msg" }) *@
            </div>

            <div class="col-md-4 col-6">
                <label>Manufacturer</label>
                <input type="text" class="form-control" name="Manufacturer" data-val="@Model.Manufacturer" value="@Model.Manufacturer" required/>
                @*@Html.EditorFor(m => m.Manufacturer, "Manufacturer", new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(m => m.Manufacturer, "", new { htmlAttributes = new { @class = "val-msg" } }) *@
            </div>
            <div class="col-md-4 col-6">
                <label>SKU</label>
                <input type="text" class="form-control" name="SKU" data-val="@Model.SKU" value="@Model.SKU" />
                @* @Html.EditorFor(m => m.SKU, "SKU", new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(m => m.SKU, "", new { htmlAttributes = new { @class = "val-msg" } }) *@
            </div>
            <div class="col-md-4 col-6">
                <label>Category</label>
                <select class="form-select select2" name="CategoryID" data-val="@Model.CategoryID" required>
                    <option value="">Select Default Category</option>
                    @foreach (var cat in ViewBag.Categories)
                    {
                        <option value="@cat.ID" @(cat.ID == Model.CategoryID ? "selected" : "")>@cat.ListName</option>
                    }
                </select>
                @* @Html.DropDownListFor(m => m.CategoryID, new SelectList(ViewBag.Categories, "ID", "ListName"), "Select Category", new { @class = "form-control form-select select2" })
                @Html.ValidationMessageFor(m => m.CategoryID, "", new { htmlAttributes = new { @class = "val-msg" } }) *@
            </div>
            <div class="col-md-4 col-6">
                <label>Default UoM</label>
                <select class="form-select select2" name="DefaultUOM" data-val="@Model.DefaultUOM">
                    <option value="">Select Default UoM</option>
                    @foreach (var uom in ViewBag.UOMs)
                    {
                        <option value="@uom.UnitName" @(uom.UnitName == Model.DefaultUOM ? "selected" : "")>@uom.ListName</option>
                    }
                </select>
                @* @Html.DropDownListFor(m => m.DefaultUOM, new SelectList(ViewBag.UOMs, "UnitName", "ListName"), "Select UoM", new { @class = "form-control form-select select2" })
                @Html.ValidationMessageFor(m => m.DefaultUOM, "", new { htmlAttributes = new { @class = "val-msg" } }) *@
            </div>
            <div class="col-md-4 col-6">
                <label>Stock Type</label>
                <select class="form-select select2" name="StockType" data-val="@Model.StockType">
                    @foreach (var st in ViewBag.StockTypes)
                    {
                        <option value="@st" @(st.ToString() == Model.StockType ? "selected" : "")>@st</option>
                    }
                </select>
                @* @Html.DropDownListFor(m => m.StockType, new SelectList(ViewBag.StockTypes), "Select Stock Type", new { @class = "form-control form-select select2" })
                @Html.ValidationMessageFor(m => m.StockType, "", new { htmlAttributes = new { @class = "val-msg" } }) *@
            </div>
            <div class="col-md-4 col-6">
                <label>Description</label>
                <input type="text" class="form-control" name="Description" data-val="@Model.Description" value="@Model.Description" />
                @* @Html.EditorFor(m => m.Tags, "Tags", new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(m => m.Tags, "", new { htmlAttributes = new { @class = "val-msg" } }) *@
            </div>
            <div class="col-md-4 col-6">
                <label>Tags</label>
                <input type="text" class="form-control" name="Tags" data-val="@Model.Tags" value="@Model.Tags" />
                @* @Html.EditorFor(m => m.Tags, "Tags", new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(m => m.Tags, "", new { htmlAttributes = new { @class = "val-msg" } }) *@
            </div>

            @*<div class="col-12 d-flex">
                <label>Container?</label>
                <input type="checkbox" class="form-check-input" />

                @Html.DropDownListFor(m => m.ContainerTypeID, new SelectList(ViewBag.Containers, "ContainerTypeID", "Name"), "Select Container Type", new { @class = "form-control form-select" })
                @Html.ValidationMessageFor(m => m.ContainerTypeID, "", new { htmlAttributes = new { @class = "val-msg" } })
            </div> *@
        </div>
    </div>
    <div class="popup-btns d-flex"><button type="submit" class="save-btn form-save mx-auto mt" data-ng-model="invItem">Save</button></div>
</form>
